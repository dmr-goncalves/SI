import java.util.*;
import org.simbrain.network.*;
import org.simbrain.network.core.*;
import org.simbrain.network.neuron_update_rules.*;
import org.simbrain.network.synapse_update_rules.*;
import org.simbrain.network.groups.*;
import org.simbrain.network.connections.*;
import org.simbrain.network.update_actions.*;
import org.simbrain.network.layouts.*;
import org.simbrain.util.*;

private NetworkUpdateAction action;

/**
 * Print qualia relative to a specified function
 *
 * TODO: Specify a second functoin
 */
{
  NeuronGroup sensoryNet  = network.getGroupByLabel("Sensory");
  Neuron errorNeuron = network.getNeuronByLabel("Error");

  this.action = new NetworkUpdateAction() {
    public void invoke() {
        double[] sensoryValues = sensoryNet.getActivations();
        if (sensoryValues[0] > 0) {
           System.out.print("Smell " + amount(sensoryValues[0]) + " cheese. ");
        }
        if (sensoryValues[1] > 0) {
           System.out.print("Smell " + amount(sensoryValues[1]) + " flower. ");
        }
        if (sensoryValues[2] > 0) {
           System.out.print("Smell " + amount(sensoryValues[2]) + " fish. ");
        }
        if (errorNeuron.getActivation() > .15) {
          System.out.print("Surprise."); 
        }
        System.out.println();
    }
    
    // This is how the action appears in the update manager dialog
    public String getDescription() {
      return "Print qualia";
    }
    
    // This is a longer description for the tooltip
    public String getLongDescription() {
      return "Print qualia";
    }

  };

}

String amount(double input) {
        if((input > 0) && (input < .2)) {
          return "very faint";
        } else if ((input >= .2) && (input < .5)) {
          return "faint";
        } else if ((input >= .5) && (input < .7)) {
          return "some";
        } else if ((input >= .7) && (input < .9)) {
          return "strong";
        } else {
          return "very strong";          
        }
}